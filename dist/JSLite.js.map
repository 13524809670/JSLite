{"version":3,"file":"JSLite.js","sources":["../src/global/regexp.js","../src/global/var.js","../src/core/validator.js","../src/core/init.js","../src/core.js","../src/JSLite.js"],"sourcesContent":["// 匹配空格的正则表达式\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim\nlet trimRE = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g\n// 只写了便签的开始或者结束 如 <div> 或者 <div/>\nlet singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/\n// HTML代码片断的正则\nlet fragmentRE = /^\\s*<(\\w+|!)[^>]*>/\n// 匹配非单独一个闭合标签的标签，类似将<div></div>写成了<div/>\nlet tagExpanderRE = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/ig\n// 正则匹配 id ，规则以 # 开头\nlet idRE = /^#([\\w-]+)$/\n// 正则匹配 class 只包括下划线，换行空格等不包括，包括中文,日文,英文,韩文.\nlet classRE = /^\\.([\\w-]+)$/\n// 正则匹配 tag标签\nlet tagRE = /^[\\w-]+$/\n\nexport { \n    trimRE, \n    singleTagRE, \n    fragmentRE, \n    tagExpanderRE,\n    classRE,\n    tagRE,\n    idRE \n}","import { singleTagRE, fragmentRE, tagExpanderRE} from './regexp'\n\nvar emptyArray = [];\nvar slice = emptyArray.slice;\nvar filter = emptyArray.filter;\nvar concat = emptyArray.concat;\nvar some = emptyArray.some;\nvar emptyObject = {};\nvar toString = emptyObject.toString;\nvar elementTypes = [1, 9, 11];\nlet version =\"<@VERSION@>\";\n\nvar class2type = {}\n\nlet table = document.createElement('table');\nlet tableRow = document.createElement('tr');\nlet containers = {\n    '*': document.createElement('div'),\n    'tr': document.createElement('tbody'),\n    'tbody': table,\n    'thead': table,\n    'tfoot': table,\n    'td': tableRow,\n    'th': tableRow\n}\n\n// 构造函数\n// 通过实例init函数，每次都构建新的init实例对象，来分隔this，避免交互混淆\nvar JSLite = (selector, context) => new JSLite.prototype.init(selector, context);\n\n// fragment\n// 需要一个HTML字符串和一个可选的标签名\n// 生成DOM节点从给定的HTML字符串节点。\n// 生成的DOM节点作为一个数组返回。\nfunction fragment(html, name) {\n    var dom, container;\n    if (singleTagRE.test(html)) dom = JSLite(document.createElement(RegExp.$1));\n    if (!dom) {\n        if (html.replace) {\n            html = html.replace(tagExpanderRE, \"<$1></$2>\");\n        }\n        if (name === undefined) {\n            name = fragmentRE.test(html) && RegExp.$1;\n        }\n        if (!(name in containers)) {\n            name = '*';\n        }\n        container = containers[name];\n        container.innerHTML = '' + html;\n        console.log(slice.call(container.childNodes))\n        // 取容器的子节点，这样就直接把字符串转成DOM节点了\n        dom = JSLite.each(slice.call(container.childNodes), function() {\n            container.removeChild(this);\n        });\n    }\n    return dom;\n}\n\nexport { JSLite, version, emptyArray, slice, filter, some, emptyObject, toString, elementTypes, fragment, class2type }","import { class2type,emptyArray } from '../global/var';\n\n\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").map(function(itm,idx){\n    class2type[ \"[object \" + itm + \"]\" ] = itm.toLowerCase();\n})\n\nfunction type(obj) {\n    // 不用 String(obj) 转字符串，为了兼容 Android <4.3 ，iOS < 8.4 \n    // http://caniuse.com/#search=String\n    return obj == null \n        ? obj + \"\" \n        : class2type[toString.call(obj)] || \"object\"\n}\n\nfunction isObject(obj){ return type(obj) == \"object\" }\nfunction isArrayLike(obj){\n    return type(obj.length) == 'number';\n}\n\nfunction isDocument(doc){\n    return doc && doc.nodeType == doc.DOCUMENT_NODE;\n}\n\nfunction isString(str){\n    return type(str) === 'string';\n}\n\nfunction isWindow(win) {\n    return win && win == win.window;\n}\n\nfunction isFunction( obj ) {\n    return type( obj ) === \"function\";\n}\n\nfunction isPlainObject(obj) {\n    return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n}\n\nfunction inArray(elem, array, i){\n    return array == null ? -1 : emptyArray.indexOf.call( array, elem, i );\n}\n\nfunction isEmptyObject(obj){\n    for ( var name in obj ) {\n        return false;\n    }\n    return true;\n}\n\nexport { \n    type, \n    isObject, \n    isArrayLike, \n    isDocument, \n    isFunction, \n    isWindow, \n    isPlainObject, \n    isString,\n    isEmptyObject,\n    inArray\n}","import { JSLite, slice, emptyArray, fragment, elementTypes } from '../global/var.js';\nimport { fragmentRE, idRE, classRE, tagRE } from '../global/regexp'\nimport { type, isFunction } from './validator'\n\nexport default (selector,context) => {\n    var dom ;\n\n    if (!selector) {\n        //没有参数，返回空数组\n        dom = emptyArray,\n        dom.selector = selector || '',\n        dom.__proto__ = JSLite.fn.init.prototype;\n    } else if( type(selector) === 'string' \n        && (selector = selector.trim()) \n        && selector[0] == '<' && fragmentRE.test(selector) ){\n\n            // 如果selector是一个 JSLite dome 实例，\n            // 如果它是一个HTML片段，从它创建节点\n            dom = fragment(selector, RegExp.$1, context),selector=null;\n    } else if (isFunction(selector)) {\n        //如果selector是个函数，则在DOM ready的时候执行它\n        return JSLite(document).ready(selector);\n    } else {\n        if (JSLite.isArray(selector)) {\n            dom = selector;\n        } else if (type(selector) === 'object') {\n            dom = [selector], selector = null;\n        } else if (elementTypes.indexOf(selector.nodeType) >= 0 || selector === window) {\n            dom = [selector], selector = null;\n        } else {\n            dom =(() => {\n                var found;\n                return (document && idRE.test(selector))?\n                ( (found = document.getElementById(RegExp.$1)) ? [found] : [] ):\n                slice.call(\n                    classRE.test(selector) ? document.getElementsByClassName(RegExp.$1) :\n                    tagRE.test(selector) ? document.getElementsByTagName(selector) :\n                    document.querySelectorAll(selector)\n                );\n            })();\n        }\n    }\n    dom = dom || emptyArray;\n    JSLite.extend(dom, JSLite.fn);\n    dom.selector = selector || '';\n    return dom;\n}","import { JSLite, version, slice, emptyArray } from './global/var.js';\nimport { trimRE } from './global/regexp.js';\nimport init from './core/init.js';\nimport { isArrayLike, type, isDocument, isWindow, isFunction, isObject, isPlainObject, isString, isEmptyObject, inArray\n } from './core/validator'\n\nJSLite.fn = JSLite.prototype = {\n    jslite:version,\n    init:init,\n}\n\n//给init函数后实例化JSLite原型\nJSLite.fn.init.prototype = JSLite.prototype;\n\n// 把对象合并为参数。\n// 对于一个深度的扩展，将第一个参数设置为“真”。\nJSLite.extend = JSLite.fn.extend = function() {\n    var options,\n        // 常见用法 JSLite.extend( obj1, obj2 )，此时，target为arguments[0]\n        target = arguments[0] || {},    \n        i = 1,\n        length = arguments.length,\n        deep = false;\n\n    // 检查是否有深度合并\n    // 如果第一个参数为true，即 JSLite.extend( true, obj1, obj2 ); 的情况\n    if ( typeof target === \"boolean\" ) {    \n        // 此时target是true\n        deep = target;  \n        // target改为 obj1\n        target = arguments[1] || {};    \n        // 跳过 boolean 和 extended\n        i = 2;\n    }\n\n    // 当目标是一个字符串或某个东西（可能在深拷贝）处理的情况下\n    // 处理奇怪的情况，比如 JSLite.extend( 'hello' , {name: 'kkk'})\n    if ( isObject(target) && !isFunction(target) ) {\n        target = {};\n    }\n\n    // 处理这种情况 JSLite.extend(obj)，或 JSLite.fn.extend( obj )\n    if ( length === i ) {  \n        target = this;  \n        // JSLite.extend时，this指的是JSLite；JSLite.fn.extend时，this指的是JSLite.fn\n        --i;\n    }\n\n    for ( ; i < length; i++ ) {\n        // 只有处理非空/未定义的值\n        if ( (options = arguments[ i ]) != null ) { \n            // 比如 JSLite.extend( obj1, obj2, obj3, ojb4 )，\n            // options则为 obj2、obj3...\n            // 扩展基对象\n            for ( var prop in options ) {\n                if ( Object.prototype.hasOwnProperty.call( options, prop ) ) {\n                    // 如果深度合并和属性是对象，合并属性\n                    if ( deep && isPlainObject(target)) {\n                        target[prop] = extend( true, target[prop], options[prop] );\n                    } else {\n                        target[prop] = options[prop];\n                    }\n                }\n            }\n        }\n    }\n\n    // 返回修改过的对象\n    return target;\n}\n\n\nJSLite.extend({\n    isArray:Array.isArray,\n    isString:isString,\n    isFunction:isFunction,\n    isDocument:isDocument,\n    isWindow:isWindow,\n    isPlainObject:isPlainObject,\n    isObject:isObject,\n    inArray:inArray,\n    isEmptyObject:isEmptyObject,\n    type:type,\n    trim:(text) => text == null ? \"\" : ( text + \"\" ).replace( trimRE, \"\" ),\n    each:function(elements, callback) {\n        if (isArrayLike(elements)) {\n            for (let i = 0; i < elements.length; i++) {\n                if (callback.call(elements[i], i, elements[i]) === false) {\n                    return elements;\n                }\n            }\n        } else {\n            for (let key in elements) {\n                if (callback.call(elements[key], key, elements[key]) === false) {\n                    return elements;\n                }\n            }\n        }\n        return elements;\n    },\n    // 默认将一个数组循环，处理之后成返回一个新的数组\n    map: function( elems, callback, arg ) {\n        var value,i = 0,ret = [];\n        // 如果是个数组，通过数组循环\n        if ( isArrayLike( elems ) ) {\n            for ( ; i < elems.length; i++ ) {\n                value = callback( elems[ i ], i, arg );\n\n                if ( value != null ) {\n                    ret.push( value );\n                }\n            }\n        // 如果是键值对，就通过键循环\n        } else {\n            for ( i in elems ) {\n                value = callback( elems[ i ], i, arg );\n\n                if ( value != null ) {\n                    ret.push( value );\n                }\n            }\n        }\n        return emptyArray.concat.apply( [], ret );\n    },\n    // 合并两个数组内容到第一个数组。\n    // 只做合并，不过滤\n    merge: function( first, second ) {\n        var i = first.length;\n        for (let j =0 ; j < +second.length; j++ ) {\n            first[ i++ ] = second[ j ];\n        }\n        first.length = i;\n        return first;\n    }\n})\n\nJSLite.fn.extend({\n    forEach: emptyArray.forEach,\n    concat: emptyArray.concat,\n    indexOf: emptyArray.indexOf,\n    toArray: function(){ return this.get() },\n    each: function(callback ){ return JSLite.each(this,callback);},\n    map: function(callback){\n        return JSLite.map(this, function( elem, i ) {\n            return callback.call( elem, i, elem );\n        } )\n    },\n    get: function(num) {\n        return num != null ?\n            // 返回集合中的一个元素\n            ( num < 0 ? this[ num + this.length ] : this[ num ] ) :\n            // 如果num不存在返回所有元素的原始数组\n            slice.call( this );\n    },\n    size:function(){return this.length;},\n    eq: function(idx){return idx === -1 ? JSLite(this.slice(idx)) : JSLite(this.slice(idx, + idx + 1))},\n    ready: function(callback){\n        if (/complete|loaded|interactive/.test(document.readyState) && document.body) callback(JSLite)\n        else document.addEventListener('DOMContentLoaded', function(){callback(JSLite) }, false)\n        return this\n    }\n})\n\n\nexport default JSLite;","import JSLite from './core.js';\n\nwindow.JSLite = window.$ = JSLite;\n\nexport default JSLite;\n\n\n"],"names":[],"mappings":"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"}